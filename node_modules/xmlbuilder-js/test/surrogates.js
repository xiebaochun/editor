(function() {
  var assert, vows, xmlbuilder;

  vows = require('vows');

  assert = require('assert');

  xmlbuilder = require('../src/index.coffee');

  vows.describe('Surrogate Pairs').addBatch({
    'Do not allow surrogates': {
      topic: function() {
        return xmlbuilder.create('test15', {
          allowSurrogateChars: false
        });
      },
      'should throw': function(xml) {
        var stringWithIssues;
        stringWithIssues = '\uD841\uDF0E\uD841\uDF0E';
        return assert.throws(function() {
          return xml.ele('node').txt(stringWithIssues);
        });
      }
    },
    'Allow surrogates': {
      topic: function() {
        return xmlbuilder.create('test16', {
          allowSurrogateChars: true
        });
      },
      'should not throw': function(xml) {
        var stringWithIssues;
        stringWithIssues = '\uD841\uDF0E\uD841\uDF0E';
        return assert.doesNotThrow(function() {
          return xml.ele('node').txt(stringWithIssues);
        });
      }
    }
  })["export"](module);

}).call(this);
