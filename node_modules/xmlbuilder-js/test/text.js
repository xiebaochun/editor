(function() {
  var assert, vows, xmlbuilder;

  vows = require('vows');

  assert = require('assert');

  xmlbuilder = require('../src/index.coffee');

  vows.describe('Text Processing').addBatch({
    'Escape "': {
      topic: function() {
        return xmlbuilder.create('test8', {}, {}, {
          headless: true
        }).ele('node', '"');
      },
      'resulting XML': function(topic) {
        var xml;
        xml = '<test8><node>"</node></test8>';
        return assert.strictEqual(topic.doc().toString(), xml);
      }
    },
    'Text node with empty string': {
      topic: function() {
        return xmlbuilder.create('test9', {}, {}, {
          headless: true
        }).text('');
      },
      'resulting XML': function(topic) {
        var xml;
        xml = '<test9></test9>';
        return assert.strictEqual(topic.doc().toString(), xml);
      }
    },
    'Text node with empty string (pretty print)': {
      topic: function() {
        return xmlbuilder.create('test10', {}, {}, {
          headless: true
        }).text('');
      },
      'resulting XML': function(topic) {
        var xml;
        xml = '<test10></test10>';
        return assert.strictEqual(topic.doc().toString({
          pretty: true
        }), xml);
      }
    }
  })["export"](module);

}).call(this);
